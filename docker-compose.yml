version: '3'

services:
  mysql_db:
    image: mysql
    restart: always
    cap_add:
      - SYS_NICE
    volumes:
      - "./setup.sql:/docker-entrypoint-inidb.d/setup.sql"
      - "./:/docker-entrypoint-initdb.d/"
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST} 
      MYSQL_USER: ${MYSQL_USER} 
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABSE} 
      TZ: Asia/Seoul

  nginx:
    image: nginx:1.15-alpine
    depends_on:
      - api
      - client
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot_service
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    build:
      dockerfile: Dockerfile
      context: "$API_PATH"
    depends_on:
      - ${DB_NAME} 
    volumes:
      - /app/node_modules
      - ${API_PATH}:/app
    environment:
      MYSQL_HOST_IP: ${DB_NAME}

  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLIGN=true
    build:
      dockerfile: Dockerfile
      context: ${CLIENT_PATH}
    volumes:
      - /app/node_modules
      - ${CLIENT_PATH}:/app
